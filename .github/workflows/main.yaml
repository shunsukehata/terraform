name: Terraform CI/CD

on:
  push:
    branches:
      - main # mainブランチにプッシュされたときに実行

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest # Ubuntu環境で実行

    # AWS認証情報を環境変数として設定
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ap-northeast-1 # <-- !! 使用するAWSリージョンを指定 !!

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # リポジトリのコードをチェックアウト

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest # 使用するTerraformのバージョンを指定 (latestで最新版)

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Format Check (Optional)
        id: fmt
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color

      # planの結果をPull Requestにコメントとして投稿する場合などに使用
      # - name: Update Pull Request with Terraform Plan
      #   uses: actions/github-script@v6
      #   if: github.event_name == 'pull_request'
      #   with:
      #     script: |
      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: "Terraform Plan:\n```\n${process.env.PLAN}\n```"
      #       })
      #   env:
      #     PLAN: ${{ steps.plan.outputs.stdout }}

      # mainブランチへのpush時に自動適用
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' # mainブランチへのpushでのみ実行
        run: terraform apply -auto-approve -input=false # -auto-approveで確認なしに適用
