# .github/workflows/main.yaml

name: "Terraform CI/CD Workflow" # ワークフロー名をより包括的なものに変更

# ワークフローがトリガーされるイベントを設定
on:
  push:
    branches:
      - master # masterブランチへのプッシュでトリガー (マージを含む)
  pull_request:
    types: [opened, reopened, synchronize] # PRオープン、再オープン、同期（新しいコミット）でトリガー
    branches:
      - master # PRのターゲットブランチがmasterの場合
    # paths: # pathsフィルターはトリガーレベルでも可能ですが、後述のアクションでより柔軟に扱います
    #   - "**/*.tf"
  issue_comment: # ★追加★ コメント作成イベントでトリガー
    types: [created] # 新しいコメントが作成されたときにトリガー

# ジョブがワークフロー中に持つ権限を設定
# comments: write はPRにコメントするために必要です。
# contents: read はコードをチェックアウトするために必要です。
# pull-requests: write はPRの状態（マージ可能性など）を読み取るために必要になる場合があります。
# issues: write はコメントに関連する場合（コメントの編集/削除など）に必要になる場合があります。
permissions:
  contents: read
  pull-requests: write
  issues: write # コメントトリガーの場合に推奨

jobs:
  terraform:
    name: 'Terraform Checks'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # stg, prodは未使用のため一旦コメントアウト
        # directory: ['environments/dev', 'environments/stg', 'environments/prod']
        directory: ['environments/dev']
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Check if directory is not empty
        id: check
        run: |
          if [ "$(ls -A .)" ]; then
            echo "Directory is not empty"
          else
            echo "Directory is empty"
            exit 1
          fi

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Comment PR
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outputs.stdout }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outputs.stdout }}\`
            #### Terraform Plan 📖\`${{ steps.plan.outputs.stdout }}\``;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Terraform checks in directory '${{ matrix.directory }}'\n` + output
            })
