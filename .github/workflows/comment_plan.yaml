name: Terraform Plan (Comment Trigger) # ワークフロー名をコメント用と明確にする

on:
  # Pull Requestのコメントが作成されたときにトリガー
  issue_comment:
    types:
      - created

jobs:
  # コメントによるPlan実行ジョブ
  comment_plan:
    name: Plan on Comment
    runs-on: ubuntu-latest
    # コメントトリガーで、コメント内容が"plan"で、それがPRに対するコメントの場合に実行
    if: contains(github.event.comment.body, 'plan') && github.event.issue.pull_request
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.issue.pull_request.head.ref }}
          repository: ${{ github.event.issue.pull_request.head.repo.full_name }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      # terraform-markdown ツールをインストール (Node.js が必要)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 適切なNode.jsバージョンを指定
      - name: Install terraform-markdown
        run: npm install -g terraform-markdown

      # Terraform Init と Plan (JSON出力)
      - name: Terraform Init and Plan (JSON)
        run: |
          terraform init -backend=true -reconfigure
          # Plan結果をJSON形式で出力し、ファイルに保存
          terraform plan -json > plan.json
        working-directory: ./envs/dev/souvenirConsultApp/ # Terraformのルートモジュールディレクトリを指定

      # Plan結果をMarkdownに整形
      - name: Format Plan Output to Markdown
        run: |
          # terraform-markdown を実行し、JSONファイルをMarkdownに変換
          terraform-markdown ./envs/dev/souvenirConsultApp/plan.json > plan.md
        # working-directory は不要 (npm install -g でインストールされているためパスが通っている)

      # 整形されたPlan結果をPRにコメント
      - name: Add Formatted Plan comment to PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            // 整形されたMarkdownファイルを読み込む
            const planOutput = fs.readFileSync('plan.md', 'utf8');
            const pull_request_number = context.issue.number;
            const comment = `
            ### \`terraform plan\` Result (Triggered by comment)

            <details><summary>Click to expand plan</summary>

            ${planOutput} # 整形されたMarkdownをそのまま埋め込み

            </details>

            _Ran on commit \`${context.sha}\`_
            `;

            await github.rest.issues.createComment({
              issue_number: pull_request_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
